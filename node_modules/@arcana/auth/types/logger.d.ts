export declare const LOG_LEVEL: {
    [k: string]: number;
};
export declare const setExceptionReporter: (reporter: (msg: string) => void) => void;
export declare const setLogLevel: (level: number) => void;
export declare const freezeLogLevel: () => void;
export declare const unfreezeLogLevel: () => void;
export declare const getLogger: (name: string) => Logger;
export declare class Logger {
    logLevel: number;
    private prefix;
    constructor(logLevel: number, prefix: string);
    log(level: string, message: string, params?: {}): void;
    info(message: string, params?: unknown): void;
    debug(message: string, params?: unknown): void;
    warn(message: string, params?: unknown): void;
    error(message: string, params?: unknown): void;
    internalLog(level: number, message: string, params: unknown): void;
    getLogLevelName(level: number): string;
    getTime(): string;
    consoleLog(level: number, message: string): void;
}
